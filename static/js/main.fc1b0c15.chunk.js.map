{"version":3,"sources":["components/weather-search/weather-search.js","components/weather-detail/weather-detail.js","components/weather/weather.js","App.js","index.js"],"names":["WeatherSearch","props","Form","onSubmit","handleSubmit","Card","className","Body","Title","Text","Control","type","placeholder","value","cityname","onChange","handleInputChanged","bind","this","Button","variant","WeatherDetail","weatherData","weather","Img","src","Math","floor","includes","class","sunset","sunrise","Weather","useState","setCity","setWeatherdata","setSunrise","setSunset","useEffect","fetchLocation","a","url","secrets","axios","get","then","response","data","console","log","getTimeFromDate","catch","error","weatherInfo","Date","toLocaleTimeString","event","preventDefault","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc1b0c15.chunk.js","sourcesContent":["import { Button,Form,Card } from 'react-bootstrap';\r\nimport './weather-search.css';\r\n\r\nfunction WeatherSearch(props){\r\n  return (\r\n\r\n    <Form  onSubmit={props.handleSubmit}>\r\n       <Card className=\"cardClass\">\r\n        <Card.Body>\r\n          <Card.Title>Search City To get Location Info</Card.Title>\r\n          <Card.Text>\r\n            <Form.Control type=\"text\" placeholder=\"Search City\"\r\n            value={props.cityname} onChange={props.handleInputChanged.bind(this)}/>\r\n          </Card.Text>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default WeatherSearch\r\n","import { Card } from 'react-bootstrap';\r\nimport './weather-detail.css';\r\n\r\nfunction WeatherDetail(props){\r\n  return (\r\n    <div>\r\n    {props.weatherData.weather ?\r\n      <Card className=\"detailCard\">\r\n            <Card.Img variant=\"top\" src={`http://openweathermap.org/img/w/${props.weatherData['weather'][0]['icon']}.png`} />\r\n              <Card.Title>{props.weatherData['weather'][0]['description']} {Math.floor(props.weatherData['main']['temp']-273)}\r\n                <span>&#176;</span> C</Card.Title>\r\n                <Card.Title>\r\n                <h3 >{props.weatherData['name']} {props.weatherData['sys']['country']}</h3>\r\n                </Card.Title>\r\n            <Card.Body>\r\n\r\n\r\n                <Card.Text>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12 col-md-6 col-sm-12 boxclass\">\r\n                    {props.weatherData['weather'][0]['icon'].includes('d') ?\r\n                    <h6><i class=\"fas fa-sunrise fa-2x\"></i> Sunset {props.sunset}</h6>\r\n                    :<h6><i class=\"fas fa-sunset fa-2x\"></i> Sunrise {props.sunrise}</h6>}\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-sm-12 boxclass\">\r\n                    <h6><i class=\"fa fa-tachometer fa-2x\" aria-hidden=\"true\"></i> Pressure {props.weatherData['main']['pressure']}mbar</h6>\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-sm-12 boxclass\">\r\n                    <h6><i class=\"fas fa-humidity fa-2x\"></i> Humidity {props.weatherData['main']['humidity']}%</h6>\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-sm-12 boxclass\">\r\n                    <h6><i class=\"fas fa-fan fa-2x\"></i> Wind {props.weatherData['wind']['speed']}km/h</h6>\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-sm-12 boxclass\">\r\n                    <h6><i class=\"fas fa-map-marker-alt fa-2x\"></i> Latitude {props.weatherData['coord']['lat']}</h6>\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6 col-sm-12 boxclass\">\r\n                    <h6><i class=\"fas fa-map-marker-alt fa-2x\"></i> Longitude {props.weatherData['coord']['lon']}</h6>\r\n                  </div>\r\n                </div>\r\n\r\n                </Card.Text>\r\n                <Card.Text>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n       :<h2>Loading...</h2>}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default WeatherDetail\r\n","import axios from 'axios';\r\nimport React,{useState,useEffect} from 'react';\r\n// import { Button,Card,Spinner,Form,Row,Col,Container } from 'react-bootstrap';\r\nimport WeatherSearch from '../weather-search/weather-search';\r\nimport WeatherDetail from '../weather-detail/weather-detail';\r\nimport * as secrets from '../../secrets.json';\r\nimport './weather.css';\r\n\r\nfunction Weather(){\r\n  const [cityname,setCity ] = useState('Belgaum');\r\n  const [weatherData,setWeatherdata] = useState({});\r\n  const [sunrise ,setSunrise] = useState('');\r\n  const [sunset ,setSunset] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchLocation()\r\n  },[]);\r\n\r\n  const fetchLocation =  async() =>{\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=${secrets.api_key}`;\r\n      await axios.get(url).then(function (response) {\r\n          setWeatherdata(response.data);\r\n          console.log(response.data);\r\n          getTimeFromDate(response.data)\r\n      })\r\n      .catch(function (error) {\r\n          console.log(error);\r\n      })\r\n  }\r\n\r\n  function getTimeFromDate(weatherInfo) {\r\n    console.log(weatherInfo);\r\n    if(weatherData){\r\n      setSunrise(new Date(weatherInfo['sys']['sunrise'] * 1000).toLocaleTimeString());\r\n      setSunset(new Date(weatherInfo['sys']['sunset'] * 1000).toLocaleTimeString());\r\n      console.log(sunrise,sunset);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    fetchLocation();\r\n    event.preventDefault();\r\n  }\r\n\r\n  function handleInputChanged(event) {\r\n    setCity(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-6 col-sm-12\">\r\n           <WeatherSearch handleSubmit={handleSubmit} cityname={cityname} handleInputChanged={handleInputChanged}/>\r\n        </div>\r\n        <div className=\"col-12 col-md-6 col-sm-12 mb-2\">\r\n          <WeatherDetail weatherData={weatherData} sunrise={sunrise} sunset = {sunset}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather\r\n","import Weather from './components/weather/weather'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}